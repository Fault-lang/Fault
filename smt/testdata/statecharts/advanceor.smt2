
(set-logic QF_NRA)
(declare-fun ador_a_option1_1 () Bool)
(declare-fun ador_a_choice_2 () Bool)
(declare-fun ador_a_option2_1 () Bool)
(declare-fun ador_a_choice_3 () Bool)
(declare-fun ador_a_option1_2 () Bool)
(declare-fun ador_a_choice_4 () Bool)
(declare-fun ador_a_option2_2 () Bool)
(declare-fun ador_a_option1_3 () Bool)
(declare-fun ador_a_choice_5 () Bool)
(declare-fun ador_a_option2_3 () Bool)
(declare-fun ador_a_choice_0 () Bool)
(declare-fun ador_a_option1_0 () Bool)
(declare-fun ador_a_option2_0 () Bool)
(declare-fun ador_a_choice_1 () Bool)(assert (= ador_a_choice_0 false))
(assert (= ador_a_option1_0 false))
(assert (= ador_a_option2_0 false))
(assert (= ador_a_choice_1 true))
(assert (or 
    (and (= ador_a_option1_1 true)(= ador_a_choice_2 false)(= ador_a_option1_2 ador_a_option1_1)(= ador_a_choice_4 ador_a_choice_2)(= ador_a_option2_2 ador_a_option2_0))
    (and (= ador_a_option2_1 true)(= ador_a_choice_3 false)(= ador_a_choice_4 ador_a_choice_3)(= ador_a_option2_2 ador_a_option2_1)(= ador_a_option1_2 ador_a_option1_0))))
(assert (ite (= ador_a_choice_1 true) 
(and (= ador_a_option1_3 ador_a_option1_2) (= ador_a_choice_5 ador_a_choice_4) (= ador_a_option2_3 ador_a_option2_2))
(and (= ador_a_option1_3 ador_a_option1_0) (= ador_a_choice_5 ador_a_choice_1) (= ador_a_option2_3 ador_a_option2_0))))
